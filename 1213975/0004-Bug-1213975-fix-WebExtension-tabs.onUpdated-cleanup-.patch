# HG changeset patch
# User Luca Greco <luca.greco@alcacoop.it>

Bug 1213975 - fix WebExtension tabs.onUpdated cleanup on context close (r=billm)

---
 browser/components/extensions/ext-tabs.js  | 7 ++++---
 browser/components/extensions/ext-utils.js | 2 +-
 2 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/browser/components/extensions/ext-tabs.js b/browser/components/extensions/ext-tabs.js
index 0456f1b..b159c4e 100644
--- a/browser/components/extensions/ext-tabs.js
+++ b/browser/components/extensions/ext-tabs.js
@@ -214,21 +214,22 @@ extensions.registerAPI((extension, context) => {
             }
           },
         };
 
         AllWindowEvents.addListener("progress", progressListener);
         AllWindowEvents.addListener("TabAttrModified", listener);
         AllWindowEvents.addListener("TabPinned", listener);
         AllWindowEvents.addListener("TabUnpinned", listener);
+
         return () => {
           AllWindowEvents.removeListener("progress", progressListener);
-          AllWindowEvents.addListener("TabAttrModified", listener);
-          AllWindowEvents.addListener("TabPinned", listener);
-          AllWindowEvents.addListener("TabUnpinned", listener);
+          AllWindowEvents.removeListener("TabAttrModified", listener);
+          AllWindowEvents.removeListener("TabPinned", listener);
+          AllWindowEvents.removeListener("TabUnpinned", listener);
         };
       }).api(),
 
       onReplaced: ignoreEvent(),
 
       onRemoved: new EventManager(context, "tabs.onRemoved", fire => {
         let tabListener = event => {
           let tab = event.originalTarget;
diff --git a/browser/components/extensions/ext-utils.js b/browser/components/extensions/ext-utils.js
index b65116c..a57126e 100644
--- a/browser/components/extensions/ext-utils.js
+++ b/browser/components/extensions/ext-utils.js
@@ -525,17 +525,17 @@ global.AllWindowEvents = {
     if (type == "domwindowopened") {
       return WindowListManager.removeOpenListener(listener);
     } else if (type == "domwindowclosed") {
       return WindowListManager.removeCloseListener(listener);
     }
 
     let listeners = this._listeners.get(type);
     listeners.delete(listener);
-    if (listeners.length == 0) {
+    if (listeners.size == 0) {
       this._listeners.delete(type);
       if (this._listeners.size == 0) {
         WindowListManager.removeOpenListener(this.openListener);
       }
     }
 
     for (let window of WindowListManager.browserWindows()) {
       if (type == "progress") {

