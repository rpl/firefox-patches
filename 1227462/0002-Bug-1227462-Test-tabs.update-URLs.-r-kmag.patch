# HG changeset patch
# User Luca Greco <lgreco@mozilla.com>

Bug 1227462 - Test tabs.update URLs. r=kmag

---
 .../components/extensions/test/browser/browser.ini |   1 +
 .../test/browser/browser_ext_tabs_update_url.js    | 108 +++++++++++++++++++++
 2 files changed, 109 insertions(+)
 create mode 100644 browser/components/extensions/test/browser/browser_ext_tabs_update_url.js

diff --git a/browser/components/extensions/test/browser/browser.ini b/browser/components/extensions/test/browser/browser.ini
index b24a926..a40494a 100644
--- a/browser/components/extensions/test/browser/browser.ini
+++ b/browser/components/extensions/test/browser/browser.ini
@@ -21,15 +21,16 @@ support-files =
 [browser_ext_contextMenus.js]
 [browser_ext_getViews.js]
 [browser_ext_tabs_executeScript_good.js]
 [browser_ext_tabs_executeScript_bad.js]
 [browser_ext_tabs_query.js]
 [browser_ext_tabs_getCurrent.js]
 [browser_ext_tabs_create.js]
 [browser_ext_tabs_update.js]
+[browser_ext_tabs_update_url.js]
 [browser_ext_tabs_onUpdated.js]
 [browser_ext_tabs_sendMessage.js]
 [browser_ext_tabs_move.js]
 [browser_ext_tabs_move_window.js]
 [browser_ext_windows_update.js]
 [browser_ext_contentscript_connect.js]
 [browser_ext_tab_runtimeConnect.js]
diff --git a/browser/components/extensions/test/browser/browser_ext_tabs_update_url.js b/browser/components/extensions/test/browser/browser_ext_tabs_update_url.js
new file mode 100644
index 0000000..d6f5d4d
--- /dev/null
+++ b/browser/components/extensions/test/browser/browser_ext_tabs_update_url.js
@@ -0,0 +1,108 @@
+/* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */
+/* vim: set sts=2 sw=2 et tw=80: */
+"use strict";
+
+function* testTabsUpdateURL(existentTabURL, tabsUpdateURL, isErrorExpected) {
+  let extension = ExtensionTestUtils.loadExtension({
+    manifest: {
+      "permissions": ["tabs"],
+      "webAccessibleResources": ["tab.html"],
+    },
+
+    files: {
+      "tab.html": `
+        <!DOCTYPE>
+        <html>
+          <head>
+            <meta charset="utf-8">
+          </head>
+          <body>
+            <h1>tab page</h1>
+          </body>
+        </html>
+      `,
+    },
+    background: function() {
+      browser.test.sendMessage("ready", browser.runtime.getURL("tab.html"));
+      browser.test.onMessage.addListener((msg, tabsUpdateURL, isErrorExpected) => {
+        browser.tabs.query({ lastFocusedWindow: true }, (tabs) => {
+          browser.tabs.update(tabs[1].id, { url: tabsUpdateURL }, (tab) => {
+            if (isErrorExpected) {
+              // TODO: check runtime.lastError once supported
+              browser.test.assertEq(undefined, tab, "on error tab should be undefined");
+            } else {
+              browser.test.assertTrue(tab, "on success the tab should be defined");
+            }
+
+            browser.test.sendMessage("done");
+          });
+        });
+      });
+    },
+  });
+
+  yield extension.startup();
+
+  let mozExtTabURL = yield extension.awaitMessage("ready");
+
+  if (tabsUpdateURL == "self") {
+    tabsUpdateURL = mozExtTabURL;
+  }
+
+  info(`tab.update URL "${tabsUpdateURL}" on tab with URL "${existentTabURL}"`);
+
+  let tab1 = yield BrowserTestUtils.openNewForegroundTab(gBrowser, existentTabURL);
+
+  extension.sendMessage("start", tabsUpdateURL, isErrorExpected);
+  yield extension.awaitMessage("done");
+
+  yield BrowserTestUtils.removeTab(tab1);
+  yield extension.unload();
+}
+
+add_task(function* () {
+  info("Start testing tabs.update on javascript URLs");
+
+  let dataURLPage = `
+    data:text/html,<!DOCTYPE html>
+    <html>
+      <head>
+        <meta charset="utf-8">
+      </head>
+      <body>
+        <h1>data url page</h1>
+      </body>
+    </html>`;
+
+  let checkList = [
+    {
+      tabsUpdateURL: "http://example.net",
+      isErrorExpected: null,
+    },
+    {
+      tabsUpdateURL: "self",
+      isErrorExpected: null,
+    },
+    {
+      tabsUpdateURL: "about:addons",
+      isErrorExpected: true,
+    },
+    {
+      tabsUpdateURL: "javascript:console.log('tabs.update execute javascript')",
+      isErrorExpected: true,
+    },
+    {
+      tabsUpdateURL: dataURLPage,
+      isErrorExpected: true,
+    },
+  ];
+
+  let testCases = checkList
+        .map((check) => Object.assign({}, check, { existentTabURL: "about:blank" }));
+
+  for (let { existentTabURL, tabsUpdateURL, isErrorExpected } of testCases) {
+    yield* testTabsUpdateURL(existentTabURL, tabsUpdateURL, isErrorExpected);
+  }
+
+  info("done");
+});

