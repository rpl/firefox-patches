# HG changeset patch
# User Luca Greco <lgreco@mozilla.com>

Bug 1227462 - tabs.create should call checkLoadURL. r=kmag

---
 browser/components/extensions/ext-tabs.js | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/browser/components/extensions/ext-tabs.js b/browser/components/extensions/ext-tabs.js
index 0f57a5c..cf34d67 100644
--- a/browser/components/extensions/ext-tabs.js
+++ b/browser/components/extensions/ext-tabs.js
@@ -259,16 +259,26 @@ extensions.registerSchemaAPI("tabs", null, (extension, context) => {
           AllWindowEvents.removeListener("TabClose", tabListener);
         };
       }).api(),
 
       create: function(createProperties, callback) {
         let url = createProperties.url || aboutNewTabService.newTabURL;
         url = context.uri.resolve(url);
 
+        // Skip checkLoadURL if the URL has been populated from the aboutNewTabService,
+        // (it is usually an "about:" or "chrome:" URL).
+        if (url != aboutNewTabService.newTabURL && !context.checkLoadURL(url)) {
+          // TODO: runtime.lastError should be set to `Invalid url: ${updateProperties.url}`
+          if (callback) {
+            runSafe(context, callback, undefined);
+          }
+          return;
+        }
+
         function createInWindow(window) {
           let tab = window.gBrowser.addTab(url);
 
           let active = true;
           if (createProperties.active !== null) {
             active = createProperties.active;
           }
           if (active) {
@@ -279,17 +289,24 @@ extensions.registerSchemaAPI("tabs", null, (extension, context) => {
             window.gBrowser.moveTabTo(tab, createProperties.index);
           }
 
           if (createProperties.pinned) {
             window.gBrowser.pinTab(tab);
           }
 
           if (callback) {
-            runSafe(context, callback, TabManager.convert(extension, tab));
+            let tabDetails = TabManager.convert(extension, tab);
+
+            // The tab details URL has to be set to the current loading URL
+            // (on the contrary, the title is supposed to remain the current one
+            // until the new page has been fully loaded in the tab).
+            tabDetails.url = url;
+
+            runSafe(context, callback, tabDetails);
           }
         }
 
         let window = createProperties.windowId !== null ?
           WindowManager.getWindow(createProperties.windowId) :
           WindowManager.topWindow;
         if (!window.gBrowser) {
           let obs = (finishedWindow, topic, data) => {

