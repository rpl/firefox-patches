# HG changeset patch
# User Luca Greco <lgreco@mozilla.com>
# Date 1458204465 -3600
#      Thu Mar 17 09:47:45 2016 +0100
# Node ID 1e5c1d937dd08410a87dbdc5a0ce524d2d3d7ca6
# Parent  d37be01f23afba039600a17f15ab54d63ae2cab2
TMP - prepare to onConnectExternal

MozReview-Commit-ID: 8AF3rX2olyy

diff --git a/toolkit/components/extensions/ExtensionUtils.jsm b/toolkit/components/extensions/ExtensionUtils.jsm
--- a/toolkit/components/extensions/ExtensionUtils.jsm
+++ b/toolkit/components/extensions/ExtensionUtils.jsm
@@ -911,29 +911,41 @@ Messenger.prototype = {
     let portId = nextPortId++;
     let port = new Port(this.context, messageManager, name, portId, null);
     let msg = {name, portId};
     // TODO: Disconnect the port if no response?
     this._sendMessage(messageManager, "Extension:Connect", msg, recipient);
     return port.api();
   },
 
-  onConnect(name) {
+  onConnect(name, external) {
+    let messageFilterPermissive = external ? null : this.filter;
+
     return new SingletonEventManager(this.context, name, callback => {
       let listener = {
-        messageFilterPermissive: this.filter,
+        messageFilterPermissive,
 
         receiveMessage: ({target, data: message, sender, recipient}) => {
+          if (external) {
+            if ((recipient.extensionId !== this.context.extension.id) ||
+                (sender.extensionId === this.context.extension.id)) {
+              // when its in cross-addon messaging mode we should only accept messages
+              // with a sender which is not equal to the recipient
+              return;
+            }
+          }
+
           let {name, portId} = message;
           let mm = getMessageManager(target);
           if (this.delegate) {
             this.delegate.getSender(this.context, target, sender);
           }
           let port = new Port(this.context, mm, name, portId, sender);
           runSafeSyncWithoutClone(callback, port.api());
+          // TODO: check if someone really needs this return value
           return true;
         },
       };
 
       MessageChannel.addListener(this.messageManagers, "Extension:Connect", listener);
       return () => {
         MessageChannel.removeListener(this.messageManagers, "Extension:Connect", listener);
       };
