# HG changeset patch
# User Luca Greco <luca.greco@alcacoop.it>

Bug 1219229 - eval background scripts injection in the target window

---
 toolkit/components/extensions/ext-backgroundPage.js | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

diff --git a/toolkit/components/extensions/ext-backgroundPage.js b/toolkit/components/extensions/ext-backgroundPage.js
index e2bf117..59a44d0 100644
--- a/toolkit/components/extensions/ext-backgroundPage.js
+++ b/toolkit/components/extensions/ext-backgroundPage.js
@@ -54,30 +54,35 @@ BackgroundPage.prototype = {
 
     // TODO: Right now we run onStartup after the background page
     // finishes. See if this is what Chrome does.
     let loadListener = event => {
       if (event.target != window.document) {
         return;
       }
       event.currentTarget.removeEventListener("load", loadListener, true);
+
       if (this.scripts) {
-        let doc = window.document;
         for (let script of this.scripts) {
           let url = this.extension.baseURI.resolve(script);
-
           if (!this.extension.isExtensionURL(url)) {
             this.extension.manifestError("Background scripts must be files within the extension");
             continue;
           }
 
-          let tag = doc.createElement("script");
-          tag.setAttribute("src", url);
-          tag.async = false;
-          doc.body.appendChild(tag);
+          // NOTE: inject the background script by evaluating the injecting code
+          // in the window context to prevents the next injected script to
+          // be processed by the AddonThreadActor before the previous one is
+          // completely resolved. (See Bug 1219229 for rationale)
+          window.eval(`(function() {
+            var scriptTag = document.createElement("script");
+            scriptTag.setAttribute("src", "${url}");
+            scriptTag.async = false;
+            document.body.appendChild(scriptTag);
+          })();`);
         }
       }
 
       if (this.extension.onStartup) {
         this.extension.onStartup();
       }
     };
     window.windowRoot.addEventListener("load", loadListener, true);

